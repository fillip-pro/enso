variables:
  DOCKER_DRIVER: overlay
  CONTAINER_IMAGE: fillip/eostre #$CI_REGISTRY_IMAGE
  CONTAINER_TEST_IMAGE: $CONTAINER_IMAGE:$CI_BUILD_REF_NAME #$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CONTAINER_IMAGE:latest #$CI_REGISTRY_IMAGE:latest

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script: echo "Running tests"

build:
  image: node:9.3
  stage: build
  script: 
    - make prepare
    - make build
  artifacts:
    paths:
      - .build/
    expire_in: 1 week

deploy:review:
  stage: deploy
  script:
    - echo "Deploy a review app"
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.fillip.pro
  only:
    - branches
  except:
    - master

deploy:staging:
  stage: deploy
  script:
    - echo "Deploy to staging server"
  environment:
    name: staging
    url: https://staging.fillip.pro
  artifacts:
    paths:
      - .build/
  only:
    - master

deploy:release:
  stage: deploy
  script:
    - echo "Deploy to production server"
  environment:
    name: production
    url: https://fillip.pro
  artifacts:
    paths:
      - .build/
  when: manual
  only:
    - release

build:container:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - echo -n $DOCKER_HUB_SECRET | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker build --pull -t $CONTAINER_TEST_IMAGE -f Dockerfile .
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  when: manual
  tags:
    - docker
  only: 
    - release
  dependencies:
    - build

tag:container:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - echo -n $DOCKER_HUB_SECRET | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker build --pull -t $CONTAINER_TEST_IMAGE -f Dockerfile .
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_IMAGE:$CI_BUILD_REF_NAME
    - docker push $CONTAINER_IMAGE:$CI_BUILD_REF_NAME
  when: manual
  tags:
    - docker
  only: 
    - tags
  dependencies:
    - build

nightly:container:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - echo -n $DOCKER_HUB_SECRET | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker build --pull -t $CONTAINER_TEST_IMAGE -f Dockerfile .
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_IMAGE:nightly
    - docker push $CONTAINER_IMAGE:nightly
  when: manual
  tags:
    - docker
  only:
    - schedules
  dependencies:
    - build
